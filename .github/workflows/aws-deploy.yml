name: Fullstack Serverless CI/CD

on:
  push:
    branches: ["google-OAuth"]
  pull_request:
    branches: ["google-OAuth"]

env:
  AWS_REGION: ap-southeast-2
  TF_VERSION: 1.9.8
  NODE_VERSION: 20

jobs:
  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  build:
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create .env file
        working-directory: ./frontend-auth
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" > .env
          echo "REACT_APP_RECAPTCHA_SITE_KEY=${{ secrets.REACT_APP_RECAPTCHA_SITE_KEY }}" >> .env

      # Install dependencies
      - name: Install Dependencies
        working-directory: ./frontend-auth
        run: npm ci

      # Build the app
      - name: Build
        working-directory: ./frontend-auth
        run: npm run build

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Deploy to S3
      - name: Deploy to S3
        run: aws s3 sync ./frontend-auth/build s3://serverless-auth-cognito-frontend-2025/react-build --delete

      # Invalidate CloudFront
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"